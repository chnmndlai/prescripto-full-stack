import QuizModel from '../models/quizModel.js';
import cloudinary from '../config/cloudinary.js';

// üß† –®–∏–Ω—ç —Ç–µ—Å—Ç “Ø“Ø—Å–≥—ç—Ö
export const createQuiz = async (req, res) => {
  try {
    const { title, summary } = req.body;
    const doctorId = req.userId;

    console.log("üì• Received form data:", req.body);
    console.log("üìÅ Uploaded file:", req.file);

    if (!title || !summary || !req.file) {
      return res.status(400).json({
        success: false,
        message: "–ì–∞—Ä—á–∏–≥, —Ç–∞–π–ª–±–∞—Ä –±–æ–ª–æ–Ω –∑—É—Ä–≥–∏–π–≥ –æ—Ä—É—É–ª–Ω–∞ —É—É."
      });
    }

    const uploadedImage = await cloudinary.uploader.upload(req.file.path);

    const newQuiz = new QuizModel({
      title,
      summary, // ‚ú® –ú–æ–¥–µ–ª –¥—ç—ç—Ä summary –≥—ç–∂ –Ω—ç—Ä–ª—ç—Å—ç–Ω –±–∞–π—Ö —ë—Å—Ç–æ–π
      image: uploadedImage.secure_url,
      doctor: doctorId, // ‚ú® –ú–æ–¥–µ–ª –¥—ç—ç—Ä doctor –≥—ç–∂ –Ω—ç—Ä–ª—ç—Å—ç–Ω –±–∞–π—Ö —ë—Å—Ç–æ–π
    });

    await newQuiz.save();

    return res.status(201).json({
      success: true,
      quiz: newQuiz,
    });
  } catch (err) {
    console.error("‚ùå –¢–µ—Å—Ç “Ø“Ø—Å–≥—ç—Ö “Ø–µ–¥ –∞–ª–¥–∞–∞:", err);
    return res.status(500).json({
      success: false,
      message: "–¢–µ—Å—Ç “Ø“Ø—Å–≥—ç—Ö—ç–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞",
      error: err.message,
    });
  }
};

// ü©∫ –≠–º—á–∏–π–Ω –æ—Ä—É—É–ª—Å–∞–Ω —Ç–µ—Å—Ç“Ø“Ø–¥–∏–π–≥ –∞–≤–∞—Ö
export const getDoctorQuizzes = async (req, res) => {
  try {
    const quizzes = await QuizModel.find({ doctor: req.userId });
    return res.json({ success: true, quizzes });
  } catch (err) {
    console.error("‚ùå –¢–µ—Å—Ç –∞–≤–∞—Ö–∞–¥ –∞–ª–¥–∞–∞:", err);
    return res.status(500).json({
      success: false,
      message: "–¢–µ—Å—Ç –∞—á–∞–∞–ª–ª–∞—Ö–∞–¥ –∞–ª–¥–∞–∞",
      error: err.message,
    });
  }
};

// ‚ùå –¢–µ—Å—Ç —É—Å—Ç–≥–∞—Ö
export const deleteQuiz = async (req, res) => {
  try {
    await QuizModel.findByIdAndDelete(req.params.id);
    return res.json({ success: true });
  } catch (err) {
    console.error("‚ùå –¢–µ—Å—Ç —É—Å—Ç–≥–∞—Ö “Ø–µ–¥ –∞–ª–¥–∞–∞:", err);
    return res.status(500).json({
      success: false,
      message: "–£—Å—Ç–≥–∞—Ö “Ø–µ–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞",
      error: err.message,
    });
  }
};


// üìã –ë“Ø—Ö —Ç–µ—Å—Ç“Ø“Ø–¥–∏–π–≥ –∞–≤–∞—Ö (public list)
export const getAllQuizzes = async (req, res) => {
  try {
    const quizzes = await QuizModel.find().sort({ createdAt: -1 });
    return res.json({ success: true, quizzes });
  } catch (err) {
    console.error("‚ùå –ë“Ø—Ö —Ç–µ—Å—Ç –∞—á–∞–∞–ª–ª–∞—Ö “Ø–µ–¥ –∞–ª–¥–∞–∞:", err);
    return res.status(500).json({
      success: false,
      message: "–ë“Ø—Ö —Ç–µ—Å—Ç –∞—á–∞–∞–ª–ª–∞—Ö–∞–¥ –∞–ª–¥–∞–∞",
      error: err.message,
    });
  }
};
// üìÑ –¢–µ—Å—Ç ID-—Ä –∞–≤–∞—Ö
export const getQuizById = async (req, res) => {
  try {
    const quiz = await QuizModel.findById(req.params.id); // id-–≥ params-–∞–∞—Å –∞–≤—á –±–∞–π–Ω–∞
    if (!quiz) {
      return res.status(404).json({ success: false, message: "–¢–µ—Å—Ç –æ–ª–¥—Å–æ–Ω–≥“Ø–π" });
    }
    return res.json({ success: true, quiz });
  } catch (err) {
    console.error("‚ùå –¢–µ—Å—Ç –∞—á–∞–∞–ª–ª–∞—Ö “Ø–µ–¥ –∞–ª–¥–∞–∞:", err);
    return res.status(500).json({
      success: false,
      message: "–¢–µ—Å—Ç –∞—á–∞–∞–ª–ª–∞—Ö–∞–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞",
      error: err.message,
    });
  }
};
