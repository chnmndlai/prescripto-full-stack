import React, { useState, useRef, useEffect } from 'react';
import { FiX } from 'react-icons/fi';

const Chatbot = ({ onClose }) => {
  const [messages, setMessages] = useState([
    { sender: 'bot', text: 'üëã –°–∞–π–Ω –±–∞–π–Ω–∞ —É—É! –ë–∏ —Ç–∞–Ω—ã —Å—ç—Ç–≥—ç–ª–∑“Ø–π–Ω —Ç—É—Å–ª–∞—Ö chatbot –±–∞–π–Ω–∞. –Æ—É –º—ç–¥—ç—Ö–∏–π–≥ —Ö“Ø—Å—ç–∂ –±–∞–π–Ω–∞ –≤—ç?' }
  ]);
  const [input, setInput] = useState('');
  const bottomRef = useRef(null);

  useEffect(() => {
    bottomRef.current?.scrollIntoView({ behavior: 'smooth' });
  }, [messages]);

  const handleSend = (e) => {
    e.preventDefault();
    if (!input.trim()) return;

    const userMessage = { sender: 'user', text: input };
    setMessages((prev) => [...prev, userMessage]);

    const botReply = getBotReply(input);
    setTimeout(() => {
      setMessages((prev) => [...prev, { sender: 'bot', text: botReply }]);
    }, 600);

    setInput('');
  };

  const getBotReply = (message) => {
    if (message.includes('—Å—ç—Ç–≥—ç–ª')) return 'üß† –°—ç—Ç–≥—ç–ª –≥—É—Ç—Ä–∞–ª –æ–ª–æ–Ω —Ö“Ø—á–∏–Ω –∑“Ø–π–ª—ç—ç—Å —à–∞–ª—Ç–≥–∞–∞–ª–∂ –±–æ–ª–Ω–æ. –¢–∞ –∏–ª“Ø“Ø –¥—ç–ª–≥—ç—Ä—ç–Ω–≥“Ø–π —Ö—É–≤–∞–∞–ª—Ü–∞–∂ –±–æ–ª–æ—Ö —É—É?';
    if (message.includes('—Ç–µ—Å—Ç')) return 'üìã –ú–∞–Ω–∞–π —Ç–µ—Å—Ç —Ç–∞–Ω—ã —Å—ç—Ç–≥—ç–ª–∑“Ø–π–Ω –±–∞–π–¥–∞–ª–¥ “Ø–Ω—ç–ª–≥—ç—ç ”©–≥–Ω”©. –¢–∞ —Å–æ–Ω–∏—Ä—Ö–æ–∂ –±–∞–π–Ω–∞ —É—É?';
    return 'ü§ñ –¢–∞–Ω—ã –∞—Å—É—É–ª—Ç—ã–≥ –æ–π–ª–≥–æ–ª–æ–æ. –ò–ª“Ø“Ø –¥—ç–ª–≥—ç—Ä—ç–Ω–≥“Ø–π –º—ç–¥—ç—ç–ª—ç–ª ”©–≥–≤”©–ª –±–∏ —Ç—É—Å–ª–∞—Ö–∞–¥ –±—ç–ª—ç–Ω!';
  };

  return (
    <div className="w-[360px] h-[520px] bg-white rounded-2xl shadow-xl border border-gray-200 relative flex flex-col overflow-hidden">
      
      {/* Header */}
      <div className="flex justify-between items-center bg-blue-600 text-white px-4 py-3">
        <h3 className="font-semibold text-sm">Prescripto ü§ñ Chatbot</h3>
        <button onClick={onClose}>
          <FiX className="text-lg hover:text-red-300" />
        </button>
      </div>

      {/* Message Area */}
      <div className="flex-1 p-4 overflow-y-auto space-y-2 bg-gray-50">
        {messages.map((msg, idx) => (
          <div
            key={idx}
            className={`max-w-[80%] p-2 px-3 rounded-lg text-sm whitespace-pre-wrap ${
              msg.sender === 'user'
                ? 'ml-auto bg-blue-100 text-right'
                : 'mr-auto bg-white border text-gray-800'
            }`}
          >
            {msg.text}
          </div>
        ))}
        <div ref={bottomRef} />
      </div>

      {/* Input Area */}
      <form onSubmit={handleSend} className="p-3 border-t bg-white flex gap-2">
        <input
          type="text"
          value={input}
          onChange={(e) => setInput(e.target.value)}
          placeholder="–¢–∞ —é—É –∞—Å—É—É—Ö –≤—ç?"
          className="flex-1 px-3 py-2 text-sm border rounded-full focus:outline-blue-500"
        />
        <button
          type="submit"
          className="bg-blue-600 text-white px-4 py-2 text-sm rounded-full hover:bg-blue-700"
        >
          –ò–ª–≥—ç—ç—Ö
        </button>
      </form>
    </div>
  );
};

export default Chatbot;
